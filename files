// components/sliding-sidebar.tsx
import React from "react";

const SlidingSidebar = ({ open }) => {
  return (
    <aside
      className={`fixed top-0 right-0 h-full w-[88%] sm:w-[420px] z-50 transition-transform duration-300 ease-out ${
        open ? "translate-x-0" : "translate-x-full"
      }`}
      role="dialog"
      aria-label="Sidebar"
    >
      <div className="h-full bg-white/80 backdrop-blur-xl border-l border-white/50 shadow-xl">
        {/* Inner content of the sidebar */}
      </div>
    </aside>
  );
};

export default SlidingSidebar;

// components/interactive-map.tsx
import React from "react";

const InteractiveMap = () => {
  return (
    <section className="bg-white rounded-2xl p-0 shadow-sm relative overflow-hidden">
      <div className="h-[70vh] w-full rounded-xl overflow-hidden">
        {/* Map content */}
      </div>
    </section>
  );
};

export default InteractiveMap;

// app/dashboard/page.tsx
import React from "react";
import InteractiveMap from "@/components/interactive-map";
import AIRecommendations from "@/components/ai-recommendations";

const DashboardPage = () => {
  return (
    <main className="container mx-auto px-2 sm:px-4 py-4 space-y-4">
      <InteractiveMap />
      <AIRecommendations />
    </main>
  );
};

export default DashboardPage;

// components/top-nav.tsx
import React, { useEffect, useState } from "react";
import Bell from "@/components/icons/bell";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

const TopNav = () => {
  const [notifOpen, setNotifOpen] = useState(false);
  const [count, setCount] = useState<number>(() => {
    const n = Number(localStorage.getItem("neighborai_notif_count") || "3");
    return Number.isNaN(n) ? 3 : n;
  });
  const items = [
    { id: "n1", text: "New event near you: Sunset Jazz" },
    { id: "n2", text: "Ava joined 'Book Club'" },
    { id: "n3", text: "Tech Meetup starts in 2 hours" },
  ];

  useEffect(() => {
    localStorage.setItem("neighborai_notif_count", String(count));
  }, [count]);

  return (
    <nav className="flex justify-between items-center p-4">
      {/* Other navigation items */}
      <DropdownMenu open={notifOpen} onOpenChange={(o) => { setNotifOpen(o); if (o) setCount(0) }}>
        <DropdownMenuTrigger asChild>
          <button className="relative rounded-full p-1.5 hover:bg-[#F3F4F6] transition-colors" aria-label="Notifications">
            <Bell className="text-[#333333]" />
            {count > 0 && (
              <span className="absolute -top-1 -right-1 bg-[#FB7185] text-white text-[10px] px-1.5 py-0.5 rounded-full">
                {count}
              </span>
            )}
          </button>
        </DropdownMenuTrigger>
        <DropdownMenuContent align="end" className="w-64">
          {items.map((it) => (
            <DropdownMenuItem key={it.id} className="text-sm">
              {it.text}
            </DropdownMenuItem>
          ))}
          {items.length === 0 && <div className="p-2 text-sm text-gray-500">No notifications</div>}
        </DropdownMenuContent>
      </DropdownMenu>
    </nav>
  );
};

export default TopNav;
